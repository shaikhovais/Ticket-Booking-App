{"ast":null,"code":"var _jsxFileName = \"/Users/ovaishk/Assignments React/unstop/src/Components/Input/Input.js\";\nimport React from \"react\";\nimport styles from \"./input.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Input = props => {\n  const {\n    setShowTrain,\n    setShowInput,\n    setShowTickets,\n    setInput,\n    noOfBookedSeats\n  } = props;\n  function removeTrain(e) {\n    e.preventDefault();\n    let input = parseInt(document.getElementById(\"input\").value);\n    if (input < 1 || isNaN(input)) {\n      alert(\"Please enter number of tickets you want to book.\");\n    } else if (input > 7) {\n      alert(\"You can reserve at most 7 tickets.\");\n    } else if (noOfBookedSeats === 80) {\n      alert(\"Sorry, this train is full.\");\n    } else if (noOfBookedSeats + input > 80) {\n      let availableSeat = 80 - noOfBookedSeats;\n      let isOrAre = availableSeat === 1 ? 'is' : 'are';\n      alert(`Sorry, only ${80 - noOfBookedSeats} seats ${isOrAre} available.`);\n    } else {\n      let train = document.getElementById(\"trainImg\");\n      if (train) {\n        train.style.transform = \"translateX(200%)\";\n      }\n      setInput(input);\n      setTimeout(() => {\n        setShowInput(false);\n        setShowTrain(false);\n        setShowTickets(true);\n      }, 1000);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"input\",\n        type: \"number\",\n        placeholder: \"Enter No Of Tickets\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: removeTrain,\n        type: \"submit\",\n        children: \"Book Ticket\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","styles","Input","props","setShowTrain","setShowInput","setShowTickets","setInput","noOfBookedSeats","removeTrain","e","preventDefault","input","parseInt","document","getElementById","value","isNaN","alert","availableSeat","isOrAre","train","style","transform","setTimeout","container"],"sources":["/Users/ovaishk/Assignments React/unstop/src/Components/Input/Input.js"],"sourcesContent":["import React from \"react\";\nimport styles from \"./input.module.css\";\n\nconst Input = (props) => {\n  const {\n    setShowTrain,\n    setShowInput,\n    setShowTickets,\n    setInput,\n    noOfBookedSeats,\n  } = props;\n\n  function removeTrain(e) {\n    e.preventDefault();\n    let input = parseInt(document.getElementById(\"input\").value);\n    if (input < 1 || isNaN(input)) {\n      alert(\"Please enter number of tickets you want to book.\");\n    } else if (input > 7) {\n      alert(\"You can reserve at most 7 tickets.\");\n    } else if (noOfBookedSeats === 80) {\n      alert(\"Sorry, this train is full.\");\n    } else if (noOfBookedSeats + input > 80) {\n        let availableSeat = 80 - noOfBookedSeats;\n        let isOrAre = availableSeat === 1 ? 'is' : 'are'; \n      alert(`Sorry, only ${80 - noOfBookedSeats} seats ${isOrAre} available.`);\n    } else {\n      let train = document.getElementById(\"trainImg\");\n      if (train) {\n        train.style.transform = \"translateX(200%)\";\n      }\n      setInput(input);\n\n      setTimeout(() => {\n        setShowInput(false);\n        setShowTrain(false);\n        setShowTickets(true);\n      }, 1000);\n    }\n  }\n\n  return (\n    <div className={styles.container}>\n      <form autoComplete=\"off\">\n        <input id=\"input\" type=\"number\" placeholder=\"Enter No Of Tickets\" />\n        <button onClick={removeTrain} type=\"submit\">\n          Book Ticket\n        </button>\n      </form>\n    </div>\n  );\n};\n\nexport default Input;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,oBAAoB;AAAC;AAExC,MAAMC,KAAK,GAAIC,KAAK,IAAK;EACvB,MAAM;IACJC,YAAY;IACZC,YAAY;IACZC,cAAc;IACdC,QAAQ;IACRC;EACF,CAAC,GAAGL,KAAK;EAET,SAASM,WAAW,CAACC,CAAC,EAAE;IACtBA,CAAC,CAACC,cAAc,EAAE;IAClB,IAAIC,KAAK,GAAGC,QAAQ,CAACC,QAAQ,CAACC,cAAc,CAAC,OAAO,CAAC,CAACC,KAAK,CAAC;IAC5D,IAAIJ,KAAK,GAAG,CAAC,IAAIK,KAAK,CAACL,KAAK,CAAC,EAAE;MAC7BM,KAAK,CAAC,kDAAkD,CAAC;IAC3D,CAAC,MAAM,IAAIN,KAAK,GAAG,CAAC,EAAE;MACpBM,KAAK,CAAC,oCAAoC,CAAC;IAC7C,CAAC,MAAM,IAAIV,eAAe,KAAK,EAAE,EAAE;MACjCU,KAAK,CAAC,4BAA4B,CAAC;IACrC,CAAC,MAAM,IAAIV,eAAe,GAAGI,KAAK,GAAG,EAAE,EAAE;MACrC,IAAIO,aAAa,GAAG,EAAE,GAAGX,eAAe;MACxC,IAAIY,OAAO,GAAGD,aAAa,KAAK,CAAC,GAAG,IAAI,GAAG,KAAK;MAClDD,KAAK,CAAE,eAAc,EAAE,GAAGV,eAAgB,UAASY,OAAQ,aAAY,CAAC;IAC1E,CAAC,MAAM;MACL,IAAIC,KAAK,GAAGP,QAAQ,CAACC,cAAc,CAAC,UAAU,CAAC;MAC/C,IAAIM,KAAK,EAAE;QACTA,KAAK,CAACC,KAAK,CAACC,SAAS,GAAG,kBAAkB;MAC5C;MACAhB,QAAQ,CAACK,KAAK,CAAC;MAEfY,UAAU,CAAC,MAAM;QACfnB,YAAY,CAAC,KAAK,CAAC;QACnBD,YAAY,CAAC,KAAK,CAAC;QACnBE,cAAc,CAAC,IAAI,CAAC;MACtB,CAAC,EAAE,IAAI,CAAC;IACV;EACF;EAEA,oBACE;IAAK,SAAS,EAAEL,MAAM,CAACwB,SAAU;IAAA,uBAC/B;MAAM,YAAY,EAAC,KAAK;MAAA,wBACtB;QAAO,EAAE,EAAC,OAAO;QAAC,IAAI,EAAC,QAAQ;QAAC,WAAW,EAAC;MAAqB;QAAA;QAAA;QAAA;MAAA,QAAG,eACpE;QAAQ,OAAO,EAAEhB,WAAY;QAAC,IAAI,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAElC;IAAA;MAAA;MAAA;MAAA;IAAA;EACJ;IAAA;IAAA;IAAA;EAAA,QACH;AAEV,CAAC;AAAC,KA/CIP,KAAK;AAiDX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}