{"ast":null,"code":"var _jsxFileName = \"/Users/ovaishk/Assignments React/unstop/src/Components/ShowTickets/ShowTickets.js\",\n  _s = $RefreshSig$();\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from \"react\";\nimport styles from \"./showTickets.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShowTickets = props => {\n  _s();\n  const {\n    input,\n    setShowTrain,\n    setShowInput,\n    setShowTickets,\n    bookedSeats,\n    seatsLeftInRow\n  } = props;\n  function getRowsLeft() {\n    // to get how many seats are left in each row  \n    let seats = document.querySelectorAll(\".seat\");\n    let rowNumber = 0;\n    let availableSeat = 7;\n    seats.forEach(seat => {\n      if (seat.classList.contains(styles.selectedSeat) || seat.classList.contains(styles.bookedSeat)) {\n        availableSeat--;\n      }\n      if (seat.innerHTML.charAt(1) === \"7\") {\n        seatsLeftInRow.current[rowNumber] = availableSeat;\n        rowNumber++;\n        availableSeat = 7;\n        if (rowNumber === 11) {\n          availableSeat = 3;\n        }\n      }\n    });\n    seatsLeftInRow.current[rowNumber] = availableSeat;\n  }\n  function assignSeats() {\n    // assigning already booked seats and currently selected seats\n    let seats = document.querySelectorAll(\".seat\");\n    seats.forEach(seat => {\n      if (bookedSeats.current.includes(seat.innerHTML)) {\n        // checking if curr seat already booked\n        seat.classList.add(styles.bookedSeat);\n      }\n    });\n    getRowsLeft();\n    let rowNumber = -1;\n    for (let index = 0; index < seatsLeftInRow.current.length; index++) {\n      if (seatsLeftInRow.current[index] >= input) {\n        // checking if any single row can accommodate all tickets\n        rowNumber = index;\n        break;\n      }\n    }\n    if (rowNumber !== -1) {\n      let currRowNumber = -1;\n      let seatsBooked = 0;\n      seats.forEach(seat => {\n        if (seat.innerHTML.charAt(1) === \"1\") {\n          currRowNumber++;\n        }\n        if (currRowNumber === rowNumber && !seat.classList.contains(styles.bookedSeat) && seatsBooked < input) {\n          seat.classList.add(styles.selectedSeat);\n          seatsBooked++;\n          bookedSeats.current.push(seat.innerHTML);\n        }\n      });\n    } else {\n      // if a single row can't accommodate then looking for a row that can accommodate maximum\n      let seatsBooked = 0;\n      let rowNumber = -1;\n      let maximumSeatAvailableInARow = 1;\n      for (let index = 0; index < seatsLeftInRow.current.length; index++) {\n        if (seatsLeftInRow.current[index] >= maximumSeatAvailableInARow) {\n          rowNumber = index;\n        }\n      }\n      if (rowNumber !== -1) {\n        let currRowNumber = -1;\n        seats.forEach(seat => {\n          if (seat.innerHTML.charAt(1) === \"1\") {\n            currRowNumber++;\n          }\n          if (currRowNumber === rowNumber && !seat.classList.contains(styles.bookedSeat) && seatsBooked < input) {\n            seat.classList.add(styles.selectedSeat);\n            seatsBooked++;\n            bookedSeats.current.push(seat.innerHTML);\n          }\n        });\n        fillLeftSeats(seatsBooked);\n      } else {\n        fillLeftSeats(seatsBooked);\n      }\n    }\n  }\n  function fillLeftSeats(seatsBooked) {\n    // filling up single seats if any booking is left\n    let seats = document.querySelectorAll(\".seat\");\n    seats.forEach(seat => {\n      if (!seat.classList.contains(styles.bookedSeat) && seatsBooked < input) {\n        seat.classList.add(styles.selectedSeat);\n        seatsBooked++;\n        bookedSeats.current.push(seat.innerHTML);\n      }\n    });\n  }\n  useEffect(() => {\n    let train = document.getElementById(\"seat-container\");\n    let rows = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\"];\n    let rowsIndex = -1;\n    if (train) {\n      for (let index = 1; index <= 80; index++) {\n        // generating 80 seats\n        if (index % 7 === 1) {\n          rowsIndex++;\n        }\n        let seat = document.createElement(\"div\");\n        if (index % 7 === 0) {\n          seat.innerHTML = `${rows[rowsIndex]}7`;\n        } else {\n          seat.innerHTML = `${rows[rowsIndex]}${index % 7}`;\n        }\n        seat.classList.add(`${styles.emptySeat}`);\n        seat.classList.add(\"seat\");\n        train.appendChild(seat);\n      }\n      assignSeats(); // assigning them class as per their status\n    }\n\n    return () => {\n      train.innerHTML = \" \";\n    };\n  }, []);\n  function bookingConfirmation() {\n    setShowTickets(false);\n    setShowTrain(true);\n    setShowInput(true);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.wrapper,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.seatContainer,\n      id: \"seat-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: bookingConfirmation,\n      children: \"Confirm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n_s(ShowTickets, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = ShowTickets;\nexport default ShowTickets;\nvar _c;\n$RefreshReg$(_c, \"ShowTickets\");","map":{"version":3,"names":["React","useEffect","styles","ShowTickets","props","input","setShowTrain","setShowInput","setShowTickets","bookedSeats","seatsLeftInRow","getRowsLeft","seats","document","querySelectorAll","rowNumber","availableSeat","forEach","seat","classList","contains","selectedSeat","bookedSeat","innerHTML","charAt","current","assignSeats","includes","add","index","length","currRowNumber","seatsBooked","push","maximumSeatAvailableInARow","fillLeftSeats","train","getElementById","rows","rowsIndex","createElement","emptySeat","appendChild","bookingConfirmation","wrapper","seatContainer"],"sources":["/Users/ovaishk/Assignments React/unstop/src/Components/ShowTickets/ShowTickets.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from \"react\";\nimport styles from \"./showTickets.module.css\";\n\nconst ShowTickets = (props) => {\n  const {\n    input,\n    setShowTrain,\n    setShowInput,\n    setShowTickets,\n    bookedSeats,\n    seatsLeftInRow,\n  } = props;\n\n  function getRowsLeft() {                            // to get how many seats are left in each row  \n    let seats = document.querySelectorAll(\".seat\");\n    let rowNumber = 0;\n    let availableSeat = 7;\n    seats.forEach((seat) => {\n      if (\n        seat.classList.contains(styles.selectedSeat) ||\n        seat.classList.contains(styles.bookedSeat)\n      ) {\n        availableSeat--;\n      }\n      if (seat.innerHTML.charAt(1) === \"7\") {\n        seatsLeftInRow.current[rowNumber] = availableSeat;\n        rowNumber++;\n        availableSeat = 7;\n        if (rowNumber === 11) {\n          availableSeat = 3;\n        }\n      }\n    });\n    seatsLeftInRow.current[rowNumber] = availableSeat;\n  }\n\n  function assignSeats() {                      // assigning already booked seats and currently selected seats\n    let seats = document.querySelectorAll(\".seat\");\n    seats.forEach((seat) => {\n      if (bookedSeats.current.includes(seat.innerHTML)) {       // checking if curr seat already booked\n        seat.classList.add(styles.bookedSeat);\n      }\n    });\n    getRowsLeft();\n    let rowNumber = -1;\n    for (let index = 0; index < seatsLeftInRow.current.length; index++) {\n      if (seatsLeftInRow.current[index] >= input) {   // checking if any single row can accommodate all tickets\n        rowNumber = index;\n        break;\n      }\n    }\n    if (rowNumber !== -1) {\n      let currRowNumber = -1;\n      let seatsBooked = 0;\n      seats.forEach((seat) => {\n        if (seat.innerHTML.charAt(1) === \"1\") {\n          currRowNumber++;\n        }\n        if (\n          currRowNumber === rowNumber &&\n          !seat.classList.contains(styles.bookedSeat) &&\n          seatsBooked < input\n        ) {\n          seat.classList.add(styles.selectedSeat);\n          seatsBooked++;\n          bookedSeats.current.push(seat.innerHTML);\n        }\n      });\n    } else {          // if a single row can't accommodate then looking for a row that can accommodate maximum\n      let seatsBooked = 0;\n      let rowNumber = -1;\n      let maximumSeatAvailableInARow = 1;\n      for (let index = 0; index < seatsLeftInRow.current.length; index++) {\n        if (seatsLeftInRow.current[index] >= maximumSeatAvailableInARow) {\n          rowNumber = index;\n        }\n      }\n      if (rowNumber !== -1) {\n        let currRowNumber = -1;\n        seats.forEach((seat) => {\n          if (seat.innerHTML.charAt(1) === \"1\") {\n            currRowNumber++;\n          }\n          if (\n            currRowNumber === rowNumber &&\n            !seat.classList.contains(styles.bookedSeat) &&\n            seatsBooked < input\n          ) {\n            seat.classList.add(styles.selectedSeat);\n            seatsBooked++;\n            bookedSeats.current.push(seat.innerHTML);\n          }\n        });\n        fillLeftSeats(seatsBooked);\n      } else {\n        fillLeftSeats(seatsBooked);\n      }\n    }\n  }\n\n  function fillLeftSeats(seatsBooked) {                 // filling up single seats if any booking is left\n    let seats = document.querySelectorAll(\".seat\");\n    seats.forEach((seat) => {\n      if (!seat.classList.contains(styles.bookedSeat) && seatsBooked < input) {\n        seat.classList.add(styles.selectedSeat);\n        seatsBooked++;\n        bookedSeats.current.push(seat.innerHTML);\n      }\n    });\n  }\n\n  useEffect(() => {\n    let train = document.getElementById(\"seat-container\");\n    let rows = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\", \"I\", \"J\", \"K\", \"L\"];\n\n    let rowsIndex = -1;\n    if (train) {\n      for (let index = 1; index <= 80; index++) {         // generating 80 seats\n        if (index % 7 === 1) {\n          rowsIndex++;\n        }\n        let seat = document.createElement(\"div\");\n        if (index % 7 === 0) {\n          seat.innerHTML = `${rows[rowsIndex]}7`;\n        } else {\n          seat.innerHTML = `${rows[rowsIndex]}${index % 7}`;\n        }\n        seat.classList.add(`${styles.emptySeat}`);\n        seat.classList.add(\"seat\");\n        train.appendChild(seat);\n      }\n      assignSeats();                                      // assigning them class as per their status\n    }\n\n    return () => {\n      train.innerHTML = \" \";\n    };\n  }, []);\n\n  function bookingConfirmation() {\n    setShowTickets(false);\n    setShowTrain(true);\n    setShowInput(true);\n  }\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.seatContainer} id=\"seat-container\"></div>\n      <button onClick={bookingConfirmation}>Confirm</button>\n    </div>\n  );\n};\n\nexport default ShowTickets;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}